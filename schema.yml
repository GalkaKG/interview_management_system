openapi: 3.0.3
info:
  title: Interview Management system
  version: 0.0.0
paths:
  /api/:
    get:
      operationId: api_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/candidates/:
    get:
      operationId: api_candidates_retrieve
      description: |-
        List and create candidates.

        List all candidates or create a new candidate.

        Note:
        - For listing all candidates, send a GET request.
        - For creating a new candidate, send a POST request with candidate details.

        Example POST data for creating a candidate:
        {
            "first_name": "John",
            "last_name": "Doe",
            "email": "john@example.com",
            "phone_number": "123-456-7890"
        }

        Responses:
        - 201 Created: Candidate created successfully.
        - 400 Bad Request: Invalid input data.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_candidates_create
      description: |-
        List and create candidates.

        List all candidates or create a new candidate.

        Note:
        - For listing all candidates, send a GET request.
        - For creating a new candidate, send a POST request with candidate details.

        Example POST data for creating a candidate:
        {
            "first_name": "John",
            "last_name": "Doe",
            "email": "john@example.com",
            "phone_number": "123-456-7890"
        }

        Responses:
        - 201 Created: Candidate created successfully.
        - 400 Bad Request: Invalid input data.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/candidates{format}:
    get:
      operationId: api_candidates_formatted_retrieve_2
      description: |-
        List and create candidates.

        List all candidates or create a new candidate.

        Note:
        - For listing all candidates, send a GET request.
        - For creating a new candidate, send a POST request with candidate details.

        Example POST data for creating a candidate:
        {
            "first_name": "John",
            "last_name": "Doe",
            "email": "john@example.com",
            "phone_number": "123-456-7890"
        }

        Responses:
        - 201 Created: Candidate created successfully.
        - 400 Bad Request: Invalid input data.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_candidates_formatted_create
      description: |-
        List and create candidates.

        List all candidates or create a new candidate.

        Note:
        - For listing all candidates, send a GET request.
        - For creating a new candidate, send a POST request with candidate details.

        Example POST data for creating a candidate:
        {
            "first_name": "John",
            "last_name": "Doe",
            "email": "john@example.com",
            "phone_number": "123-456-7890"
        }

        Responses:
        - 201 Created: Candidate created successfully.
        - 400 Bad Request: Invalid input data.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/candidates/{id}/:
    get:
      operationId: api_candidates_retrieve_2
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_candidates_update
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_candidates_destroy
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/candidates/{id}{format}:
    get:
      operationId: api_candidates_formatted_retrieve
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_candidates_formatted_update
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_candidates_formatted_destroy
      description: |-
        Retrieve, update, or delete a candidate by ID.

        Retrieve, update, or delete a candidate by specifying the candidate's ID.

        Example URL for a specific candidate:
        /candidates/1/

        Example PUT data for updating a candidate:
        {
            "first_name": "Updated John",
            "last_name": "Updated Doe",
            "email": "updated@example.com",
            "phone_number": "987-654-3210"
        }

        Responses:
        - 200 OK: Candidate retrieved or updated successfully.
        - 204 No Content: Candidate deleted successfully.
        - 400 Bad Request: Invalid input data.
        - 404 Not Found: Candidate not found.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
